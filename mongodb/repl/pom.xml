<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.torodb.engine.mongodb</groupId>
        <artifactId>mongodb-pom</artifactId>
        <version>0.50.2-SNAPSHOT</version>
    </parent>
    <artifactId>repl</artifactId>
    
    <name>ToroDB: MongoDB Repl</name>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mongodb-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb.mongowp.client</groupId>
            <artifactId>driver-wrapper</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jool</artifactId>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine.backend</groupId>
            <artifactId>backend-common</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine.backend</groupId>
            <artifactId>backend-derby</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb</groupId>
            <artifactId>akka-chronicle-queue</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb.mongowp.bson</groupId>
            <artifactId>org-bson-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.torodb.testing</groupId>
            <artifactId>postgres-docker</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.torodb.testing</groupId>
            <artifactId>mysql-docker</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine.backend</groupId>
            <artifactId>backend-postgresql</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.torodb.engine.backend</groupId>
            <artifactId>backend-mysql</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>integration</id>
            <properties>
                <docker.container.mongodb>mongo:3.4</docker.container.mongodb>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>shard-copy-resources</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/shard/
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/shard</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                    <delimiters>
                                        <delimiter>@{*}</delimiter>
                                    </delimiters>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>start-mongo-sharding</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <useColor>true</useColor>
                                    <verbose>true</verbose>
                                    <showLogs>true</showLogs>
                                    <images>
                                        <image>
                                            <name>${docker.container.mongodb}</name>
                                            <alias>mongo-sharding</alias>
                                            <build>
                                                <cleanup>try</cleanup>
                                                <optimise>true</optimise>
                                                <from>mongo-sharding</from>
                                                <runCmds>
                                                    <run>apt-get update</run>
                                                </runCmds>
                                            </build>
                                            <run>
                                                <namingStrategy>alias</namingStrategy>
                                                <volumes>
                                                    <bind>
                                                        <volume>
                                                            ${project.build.directory}/shard:/shard
                                                        </volume>
                                                    </bind>
                                                </volumes>
                                                <ports>
                                                    <port>27000:27000</port>
                                                    <port>27001:27001</port>
                                                    <port>27002:27002</port>
                                                    <port>27010:27010</port>
                                                    <port>27011:27011</port>
                                                    <port>27012:27012</port>
                                                    <port>27020:27020</port>
                                                    <port>27021:27021</port>
                                                    <port>27022:27022</port>
                                                    <port>27030:27030</port>
                                                    <port>27031:27031</port>
                                                    <port>27032:27032</port>
                                                    <port>27017:27017</port>
                                                </ports>
                                                <cmd>
                                                    <arg>/bin/bash</arg>
                                                    <arg>
                                                        /shard/config.sh
                                                    </arg>
                                                </cmd>
                                                <wait>
                                                    <time>40000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-mongo-sharding</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>
</project>